INFO: 2024-11-30 23:12:11,456: main() 'Using profile folder /home/bergefe/.config/variety/'
INFO: 2024-11-30 23:12:19,487: write_current_version() 'Writing current version 0.8.12 to .version'
INFO: 2024-11-30 23:12:19,487: perform_upgrade() 'Last run version was 0.8.12 or earlier, current version is 0.8.12'
INFO: 2024-11-30 23:12:19,528: process_command() 'Received command: []'
INFO: 2024-11-30 23:12:19,529: start() 'Using data_path /usr/share/variety'
INFO: 2024-11-30 23:12:19,529: load() 'Jumble loading'
INFO: 2024-11-30 23:12:19,529: _walk_modules() 'Jumble loading module in __init__ from /usr/lib/python3.13/site-packages/variety/plugins/builtin/__init__.py'
INFO: 2024-11-30 23:12:19,529: _walk_modules() 'Jumble loading module in GnomeDisplayModesPlugin from /usr/lib/python3.13/site-packages/variety/plugins/builtin/display_modes/GnomeDisplayModesPlugin.py'
INFO: 2024-11-30 23:12:19,529: load() 'Jumble found plugin class: <class 'GnomeDisplayModesPlugin.GnomeDisplayModesPlugin'>: {'name': 'GnomeDisplayModesPlugin', 'description': 'Display modes relying on the underlying desktop environment', 'version': '1.0', 'author': 'Peter Levi'}'
INFO: 2024-11-30 23:12:19,529: _walk_modules() 'Jumble loading module in LegacyDisplayModesPlugin from /usr/lib/python3.13/site-packages/variety/plugins/builtin/display_modes/LegacyDisplayModesPlugin.py'
INFO: 2024-11-30 23:12:19,530: load() 'Jumble found plugin class: <class 'LegacyDisplayModesPlugin.LegacyDisplayModesPlugin'>: {'name': 'LegacyDisplayModesPlugin', 'description': 'Legacy display mode for compatibility with past Variety versions', 'version': '1.0', 'author': 'Peter Levi'}'
INFO: 2024-11-30 23:12:19,530: _walk_modules() 'Jumble loading module in ResizingDisplayModesPlugin from /usr/lib/python3.13/site-packages/variety/plugins/builtin/display_modes/ResizingDisplayModesPlugin.py'
INFO: 2024-11-30 23:12:19,530: load() 'Jumble found plugin class: <class 'ResizingDisplayModesPlugin.ResizingDisplayModesPlugin'>: {'name': 'ResizingDisplayModesPlugin', 'description': 'Display modes that use image resizing within Variety', 'version': '1.0', 'author': 'Peter Levi'}'
INFO: 2024-11-30 23:12:19,530: _walk_modules() 'Jumble loading module in __init__ from /usr/lib/python3.13/site-packages/variety/plugins/builtin/display_modes/__init__.py'
INFO: 2024-11-30 23:12:19,530: _walk_modules() 'Jumble loading module in APODDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/APODDownloader.py'
INFO: 2024-11-30 23:12:19,530: load() 'Jumble found plugin class: <class 'APODDownloader.APODDownloader'>: {'name': 'APODDownloader', 'description': 'NASA Astro Pic of the Day', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,530: _walk_modules() 'Jumble loading module in ArtStationDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/ArtStationDownloader.py'
INFO: 2024-11-30 23:12:19,530: _walk_modules() 'Jumble loading module in ArtStationSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/ArtStationSource.py'
INFO: 2024-11-30 23:12:19,531: load() 'Jumble found plugin class: <class 'ArtStationSource.ArtStationSource'>: {'name': 'ArtStationSource', 'description': 'Configurable source for fetching images from ArtStation', 'author': 'Denis Gordeev', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,531: _walk_modules() 'Jumble loading module in BingDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/BingDownloader.py'
INFO: 2024-11-30 23:12:19,531: load() 'Jumble found plugin class: <class 'BingDownloader.BingDownloader'>: {'name': 'BingDownloader', 'description': 'Bing Photo of the Day', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,531: _walk_modules() 'Jumble loading module in EarthviewDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/EarthviewDownloader.py'
INFO: 2024-11-30 23:12:19,531: load() 'Jumble found plugin class: <class 'EarthviewDownloader.EarthviewDownloader'>: {'name': 'EarthviewDownloader', 'description': 'Google Earth View Wallpapers', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,531: _walk_modules() 'Jumble loading module in MediaRSSDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/MediaRSSDownloader.py'
INFO: 2024-11-30 23:12:19,532: _walk_modules() 'Jumble loading module in MediaRSSSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/MediaRSSSource.py'
INFO: 2024-11-30 23:12:19,532: load() 'Jumble found plugin class: <class 'MediaRSSSource.MediaRSSSource'>: {'name': 'MediaRSSSource', 'description': 'Configurable source for fetching images from MediaRSS feeds', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,532: _walk_modules() 'Jumble loading module in NationalGeographicDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py'
INFO: 2024-11-30 23:12:19,532: load() 'Jumble found plugin class: <class 'NationalGeographicDownloader.NationalGeographicDownloader'>: {'name': 'NationalGeographicDownloader', 'description': "National Geographic's photo of the day", 'author': 'Eric RÃ¶sch', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,532: _walk_modules() 'Jumble loading module in RedditDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/RedditDownloader.py'
INFO: 2024-11-30 23:12:19,532: _walk_modules() 'Jumble loading module in RedditSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/RedditSource.py'
INFO: 2024-11-30 23:12:19,533: load() 'Jumble found plugin class: <class 'RedditSource.RedditSource'>: {'name': 'RedditSource', 'description': 'Configurable source for fetching images from Reddit', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,533: _walk_modules() 'Jumble loading module in UnsplashConfigurableSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/UnsplashConfigurableSource.py'
INFO: 2024-11-30 23:12:19,533: load() 'Jumble found plugin class: <class 'UnsplashConfigurableSource.UnsplashConfigurableSource'>: {'name': 'UnsplashConfigurableSource', 'description': 'Configurable source for fetching photos from Unsplash.com', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,533: _walk_modules() 'Jumble loading module in UnsplashDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/UnsplashDownloader.py'
INFO: 2024-11-30 23:12:19,533: load() 'Jumble found plugin class: <class 'UnsplashDownloader.UnsplashDownloader'>: {'name': 'UnsplashDownloader', 'description': 'High-resolution photos from Unsplash.com', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,533: _walk_modules() 'Jumble loading module in WallhavenDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/WallhavenDownloader.py'
INFO: 2024-11-30 23:12:19,534: _walk_modules() 'Jumble loading module in WallhavenLegacyDownloader from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/WallhavenLegacyDownloader.py'
INFO: 2024-11-30 23:12:19,534: _walk_modules() 'Jumble loading module in WallhavenSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/WallhavenSource.py'
INFO: 2024-11-30 23:12:19,534: load() 'Jumble found plugin class: <class 'WallhavenSource.WallhavenSource'>: {'name': 'WallhavenSource', 'description': 'Configurable source for fetching images from Wallhaven.cc', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,534: _walk_modules() 'Jumble loading module in __init__ from /usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/__init__.py'
INFO: 2024-11-30 23:12:19,535: _walk_modules() 'Jumble loading module in FortuneSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/quotes/FortuneSource.py'
INFO: 2024-11-30 23:12:19,535: load() 'Jumble found plugin class: <class 'FortuneSource.FortuneSource'>: {'name': 'UNIX fortune program', 'description': 'Displays quotes using the UNIX fortune program. You may want to install additional fortune packs, e.g. fortunes-bofh-excuses.', 'author': 'Dan Jones', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,535: _walk_modules() 'Jumble loading module in GoodreadsSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/quotes/GoodreadsSource.py'
INFO: 2024-11-30 23:12:19,550: load() 'Jumble found plugin class: <class 'GoodreadsSource.GoodreadsSource'>: {'name': 'Goodreads', 'description': 'Fetches quotes from Goodreads.com', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,550: _walk_modules() 'Jumble loading module in LocalFilesSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/quotes/LocalFilesSource.py'
INFO: 2024-11-30 23:12:19,550: load() 'Jumble found plugin class: <class 'LocalFilesSource.LocalFilesSource'>: {'name': 'Local text files', 'description': 'Displays quotes, defined in local text files.\nPut your own txt files in: ~/.config/variety/pluginconfig/quotes/.\nThe file format is:\n\nquote -- author\n.\nsecond quote -- another author\n.\netc...\n\nExample: http://rvelthuis.de/zips/quotes.txt', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,550: _walk_modules() 'Jumble loading module in QuotationsPageSource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/quotes/QuotationsPageSource.py'
INFO: 2024-11-30 23:12:19,551: load() 'Jumble found plugin class: <class 'QuotationsPageSource.QuotationsPageSource'>: {'name': 'TheQuotationsPage.com', 'description': 'Fetches quotes from TheQuotationsPage.com', 'author': 'Peter Levi', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,551: _walk_modules() 'Jumble loading module in UrbanDictionarySource from /usr/lib/python3.13/site-packages/variety/plugins/builtin/quotes/UrbanDictionarySource.py'
INFO: 2024-11-30 23:12:19,551: load() 'Jumble found plugin class: <class 'UrbanDictionarySource.UrbanDictionarySource'>: {'name': 'Urban Dictionary', 'description': 'Displays definitions from Urban Dictionary', 'author': 'James Miller', 'version': '0.1'}'
INFO: 2024-11-30 23:12:19,551: _walk_modules() 'Jumble loading module in __init__ from /usr/lib/python3.13/site-packages/variety/plugins/builtin/quotes/__init__.py'
INFO: 2024-11-30 23:12:19,557: reload_config() 'Creating new downloader for type bing, location Bing Photo of the Day'
INFO: 2024-11-30 23:12:19,557: reload_config() 'Creating new downloader for type natgeo, location National Geographic's photo of the day'
INFO: 2024-11-30 23:12:19,557: log_options() 'Loaded options:'
INFO: 2024-11-30 23:12:19,557: log_options() 'change_enabled = True'
INFO: 2024-11-30 23:12:19,558: log_options() 'change_interval = 900'
INFO: 2024-11-30 23:12:19,558: log_options() 'change_on_start = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'clipboard_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'clipboard_hosts = ['wallhaven.cc', 'wallpapers.net', 'flickr.com', 'imgur.com', 'deviantart.com', 'interfacelift.com', 'vladstudio.com', 'imageshack.us', 'deviantart.net', 'imageshack.com']'
INFO: 2024-11-30 23:12:19,558: log_options() 'clipboard_use_whitelist = True'
INFO: 2024-11-30 23:12:19,558: log_options() 'clock_date_font = Serif 30'
INFO: 2024-11-30 23:12:19,558: log_options() 'clock_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'clock_filter = -density 100 -font `fc-match -f '%{file[0]}' '%CLOCK_FONT_NAME'` -pointsize %CLOCK_FONT_SIZE -gravity SouthEast -fill '#00000044' -annotate 0x0+[%HOFFSET+58]+[%VOFFSET+108] '%H:%M' -fill white -annotate 0x0+[%HOFFSET+60]+[%VOFFSET+110] '%H:%M' -font `fc-match -f '%{file[0]}' '%DATE_FONT_NAME'` -pointsize %DATE_FONT_SIZE -fill '#00000044' -annotate 0x0+[%HOFFSET+58]+[%VOFFSET+58] '%A, %B %d' -fill white -annotate 0x0+[%HOFFSET+60]+[%VOFFSET+60] '%A, %B %d''
INFO: 2024-11-30 23:12:19,558: log_options() 'clock_font = Serif 70'
INFO: 2024-11-30 23:12:19,558: log_options() 'configfile = /home/bergefe/.config/variety/variety.conf'
INFO: 2024-11-30 23:12:19,558: log_options() 'copyto_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'copyto_folder = Default'
INFO: 2024-11-30 23:12:19,558: log_options() 'desired_color = [160, 160, 160]'
INFO: 2024-11-30 23:12:19,558: log_options() 'desired_color_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'download_folder = /home/bergefe/.config/variety/Downloaded'
INFO: 2024-11-30 23:12:19,558: log_options() 'download_preference_ratio = 0.9'
INFO: 2024-11-30 23:12:19,558: log_options() 'favorites_folder = /home/bergefe/.config/variety/Favorites'
INFO: 2024-11-30 23:12:19,558: log_options() 'favorites_operations = [['Downloaded', 'Copy'], ['Fetched', 'Move'], ['Others', 'Copy']]'
INFO: 2024-11-30 23:12:19,558: log_options() 'fetched_folder = /home/bergefe/.config/variety/Fetched'
INFO: 2024-11-30 23:12:19,558: log_options() 'filters = [[False, 'Keep original', ''], [False, 'Grayscale', '-type Grayscale'], [False, 'Heavy blur', '-scale 20% -blur 0x10 -resize 500%'], [False, 'Soft blur', '-scale 20% -blur 0x2 -resize 500%'], [False, 'Oil painting', '-paint 8'], [False, 'Pointilism', '-spread 10 -noise 3'], [False, 'Pixellate', '-scale 3% -scale 3333%']]'
INFO: 2024-11-30 23:12:19,558: log_options() 'get_wallpaper_script = /home/bergefe/.config/variety/scripts/get_wallpaper'
INFO: 2024-11-30 23:12:19,558: log_options() 'icon = Light'
INFO: 2024-11-30 23:12:19,558: log_options() 'internet_enabled = True'
INFO: 2024-11-30 23:12:19,558: log_options() 'lightness_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'lightness_mode = 0'
INFO: 2024-11-30 23:12:19,558: log_options() 'min_rating = 4'
INFO: 2024-11-30 23:12:19,558: log_options() 'min_rating_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'min_size = 80'
INFO: 2024-11-30 23:12:19,558: log_options() 'min_size_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'quota_enabled = True'
INFO: 2024-11-30 23:12:19,558: log_options() 'quota_size = 1000'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_authors = '
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_bg_color = [80, 80, 80]'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_bg_opacity = 55'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_change_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_change_interval = 300'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_disabled_sources = ['Urban Dictionary']'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_favorites_file = /home/bergefe/.config/variety/favorite_quotes.txt'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_font = Serif 30'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_hpos = 100'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_max_length = 250'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_tags = '
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_text_color = [255, 255, 255]'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_text_shadow = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_vpos = 40'
INFO: 2024-11-30 23:12:19,558: log_options() 'quotes_width = 70'
INFO: 2024-11-30 23:12:19,558: log_options() 'safe_mode = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'set_wallpaper_script = /home/bergefe/.config/variety/scripts/set_wallpaper'
INFO: 2024-11-30 23:12:19,558: log_options() 'slideshow_custom_enabled = False'
INFO: 2024-11-30 23:12:19,558: log_options() 'slideshow_custom_folder = /home/bergefe/Pictures'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_downloads_enabled = False'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_fade = 0.4'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_favorites_enabled = True'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_mode = Fullscreen'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_monitor = All'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_pan = 0.05'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_seconds = 6.0'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_sort_order = Random'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_sources_enabled = True'
INFO: 2024-11-30 23:12:19,559: log_options() 'slideshow_zoom = 0.2'
INFO: 2024-11-30 23:12:19,559: log_options() 'smart_enabled = False'
INFO: 2024-11-30 23:12:19,559: log_options() 'smart_notice_shown = False'
INFO: 2024-11-30 23:12:19,559: log_options() 'smart_register_shown = False'
INFO: 2024-11-30 23:12:19,559: log_options() 'sources = [[True, 'favorites', 'The Favorites folder'], [True, 'fetched', 'The Fetched folder'], [True, 'folder', '/usr/share/backgrounds'], [False, 'flickr', 'user:www.flickr.com/photos/peter-levi/;user_id:93647178@N00;'], [False, 'apod', "NASA's Astronomy Picture of the Day"], [True, 'bing', 'Bing Photo of the Day'], [False, 'earthview', 'Google Earth View Wallpapers'], [True, 'natgeo', "National Geographic's photo of the day"], [False, 'unsplash', 'High-resolution photos from Unsplash.com']]'
INFO: 2024-11-30 23:12:19,559: log_options() 'stats_enabled = True'
INFO: 2024-11-30 23:12:19,559: log_options() 'stats_notice_shown = False'
INFO: 2024-11-30 23:12:19,559: log_options() 'sync_enabled = True'
INFO: 2024-11-30 23:12:19,559: log_options() 'use_landscape_enabled = True'
INFO: 2024-11-30 23:12:19,559: log_options() 'wallhaven_api_key = '
INFO: 2024-11-30 23:12:19,559: log_options() 'wallpaper_auto_rotate = False'
INFO: 2024-11-30 23:12:19,559: log_options() 'wallpaper_display_mode = os'
INFO: 2024-11-30 23:12:19,559: reload_config() 'No need to clear prepared queue'
INFO: 2024-11-30 23:12:19,559: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:12:19,560: load_banned() 'Missing or invalid banned URLs list, no URLs will be banned'
INFO: 2024-11-30 23:12:19,560: load_last_change_time() 'Change interval < 6 hours, ignore persisted last_change_time, wait initially the whole interval: 900'
INFO: 2024-11-30 23:12:19,560: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:12:19,560: regular_change_thread() 'regular_change thread running'
INFO: 2024-11-30 23:12:19,560: prepare_thread() 'Prepare thread running'
INFO: 2024-11-30 23:12:19,560: prepare_thread() 'Prepared buffer contains 0 images'
INFO: 2024-11-30 23:12:19,560: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:12:19,560: prepare_thread() 'Preparing some images'
INFO: 2024-11-30 23:12:19,561: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:12:19,561: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:12:19,561: update_indicator_icon() 'Creating indicator'
INFO: 2024-11-30 23:12:19,561: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:12:19,561: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:12:19,561: download_one() 'Bing: Queue size: 0'
INFO: 2024-11-30 23:12:19,561: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:12:19,562: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:12:19,562: download_one() 'Bing: Filling queue'
WARNING: 2024-11-30 23:12:19,566: create_menu() 'Variety Slideshow is not installed. This is an optional extension adding pan-and-zoom slideshows to Variety: see https://github.com/peterlevi/variety-slideshow for details'
INFO: 2024-11-30 23:12:19,566: create_indicator() 'indicator backend: AppIndicator3'
INFO: 2024-11-30 23:12:19,568: set_from_theme_icon() 'Showing indicator icon variety-indicator from GTK theme'
INFO: 2024-11-30 23:12:19,572: prepare_thread() 'After search prepared buffer contains 20 images'
INFO: 2024-11-30 23:12:19,660: do_set_wp() 'Calling do_set_wp with /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg, time: 1733004739.6604564'
INFO: 2024-11-30 23:12:19,688: download_one() 'Bing: Queue populated with 8 URLs'
INFO: 2024-11-30 23:12:19,688: save_locally() 'Origin URL: https://www.bing.com/search?q=Saint+Andrew%27s+Day&form=hpcapt&filters=HpDate%3a%2220241130_0800%22'
INFO: 2024-11-30 23:12:19,688: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.KilchurnAutumn_EN-US6737063910_UHD.jpg'
INFO: 2024-11-30 23:12:19,688: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.KilchurnAutumn_EN-US6737063910_UHD.jpg'
INFO: 2024-11-30 23:12:19,688: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:12:19,706: reload() 'Reloading preferences dialog'
INFO: 2024-11-30 23:12:19,759: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:12:19,760: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:12:20,689: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:12:20,689: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:12:20,689: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:12:20,689: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:12:20,689: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:12:20,689: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:12:20,689: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:12:20,689: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:12:20,689: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:12:20,922: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
INFO: 2024-11-30 23:12:21,572: trigger_download() 'Triggering download thread to check if download needed and possible'
ERROR: 2024-11-30 23:12:29,667: set_desktop_wallpaper() 'Timeout while running set_wallpaper script, killed'
INFO: 2024-11-30 23:12:31,582: trigger_download() 'Triggering download thread to check if download needed and possible'
INFO: 2024-11-30 23:12:31,682: apply() 'Applying preferences'
INFO: 2024-11-30 23:12:31,685: set_visible() 'Showing indicator icon'
INFO: 2024-11-30 23:12:31,685: set_from_theme_icon() 'Showing indicator icon variety-indicator from GTK theme'
INFO: 2024-11-30 23:12:31,685: log_options() 'Loaded options:'
INFO: 2024-11-30 23:12:31,685: log_options() 'change_enabled = True'
INFO: 2024-11-30 23:12:31,686: log_options() 'change_interval = 900'
INFO: 2024-11-30 23:12:31,686: log_options() 'change_on_start = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'clipboard_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'clipboard_hosts = ['wallhaven.cc', 'wallpapers.net', 'flickr.com', 'imgur.com', 'deviantart.com', 'interfacelift.com', 'vladstudio.com', 'imageshack.us', 'deviantart.net', 'imageshack.com']'
INFO: 2024-11-30 23:12:31,686: log_options() 'clipboard_use_whitelist = True'
INFO: 2024-11-30 23:12:31,686: log_options() 'clock_date_font = Serif 30'
INFO: 2024-11-30 23:12:31,686: log_options() 'clock_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'clock_filter = -density 100 -font `fc-match -f '%{file[0]}' '%CLOCK_FONT_NAME'` -pointsize %CLOCK_FONT_SIZE -gravity SouthEast -fill '#00000044' -annotate 0x0+[%HOFFSET+58]+[%VOFFSET+108] '%H:%M' -fill white -annotate 0x0+[%HOFFSET+60]+[%VOFFSET+110] '%H:%M' -font `fc-match -f '%{file[0]}' '%DATE_FONT_NAME'` -pointsize %DATE_FONT_SIZE -fill '#00000044' -annotate 0x0+[%HOFFSET+58]+[%VOFFSET+58] '%A, %B %d' -fill white -annotate 0x0+[%HOFFSET+60]+[%VOFFSET+60] '%A, %B %d''
INFO: 2024-11-30 23:12:31,686: log_options() 'clock_font = Serif 70'
INFO: 2024-11-30 23:12:31,686: log_options() 'configfile = /home/bergefe/.config/variety/variety.conf'
INFO: 2024-11-30 23:12:31,686: log_options() 'copyto_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'copyto_folder = Default'
INFO: 2024-11-30 23:12:31,686: log_options() 'desired_color = [160, 160, 160]'
INFO: 2024-11-30 23:12:31,686: log_options() 'desired_color_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'download_folder = /home/bergefe/.config/variety/Downloaded'
INFO: 2024-11-30 23:12:31,686: log_options() 'download_preference_ratio = 0.9'
INFO: 2024-11-30 23:12:31,686: log_options() 'favorites_folder = /home/bergefe/.config/variety/Favorites'
INFO: 2024-11-30 23:12:31,686: log_options() 'favorites_operations = [['Downloaded', 'Copy'], ['Fetched', 'Move'], ['Others', 'Copy']]'
INFO: 2024-11-30 23:12:31,686: log_options() 'fetched_folder = /home/bergefe/.config/variety/Fetched'
INFO: 2024-11-30 23:12:31,686: log_options() 'filters = [[False, 'Keep original', ''], [False, 'Grayscale', '-type Grayscale'], [False, 'Heavy blur', '-scale 20% -blur 0x10 -resize 500%'], [False, 'Soft blur', '-scale 20% -blur 0x2 -resize 500%'], [False, 'Oil painting', '-paint 8'], [False, 'Pointilism', '-spread 10 -noise 3'], [False, 'Pixellate', '-scale 3% -scale 3333%']]'
INFO: 2024-11-30 23:12:31,686: log_options() 'get_wallpaper_script = /home/bergefe/.config/variety/scripts/get_wallpaper'
INFO: 2024-11-30 23:12:31,686: log_options() 'icon = Light'
INFO: 2024-11-30 23:12:31,686: log_options() 'internet_enabled = True'
INFO: 2024-11-30 23:12:31,686: log_options() 'lightness_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'lightness_mode = 0'
INFO: 2024-11-30 23:12:31,686: log_options() 'min_rating = 4'
INFO: 2024-11-30 23:12:31,686: log_options() 'min_rating_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'min_size = 80'
INFO: 2024-11-30 23:12:31,686: log_options() 'min_size_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'quota_enabled = True'
INFO: 2024-11-30 23:12:31,686: log_options() 'quota_size = 1000'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_authors = '
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_bg_color = [80, 80, 80]'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_bg_opacity = 55'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_change_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_change_interval = 300'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_disabled_sources = ['Urban Dictionary']'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_favorites_file = /home/bergefe/.config/variety/favorite_quotes.txt'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_font = Serif 30'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_hpos = 100'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_max_length = 250'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_tags = '
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_text_color = [255, 255, 255]'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_text_shadow = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_vpos = 40'
INFO: 2024-11-30 23:12:31,686: log_options() 'quotes_width = 70'
INFO: 2024-11-30 23:12:31,686: log_options() 'safe_mode = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'set_wallpaper_script = /home/bergefe/.config/variety/scripts/set_wallpaper'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_custom_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_custom_folder = /home/bergefe/Pictures'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_downloads_enabled = False'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_fade = 0.4'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_favorites_enabled = True'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_mode = Fullscreen'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_monitor = All'
INFO: 2024-11-30 23:12:31,686: log_options() 'slideshow_pan = 0.05'
INFO: 2024-11-30 23:12:31,687: log_options() 'slideshow_seconds = 6.0'
INFO: 2024-11-30 23:12:31,687: log_options() 'slideshow_sort_order = Random'
INFO: 2024-11-30 23:12:31,687: log_options() 'slideshow_sources_enabled = True'
INFO: 2024-11-30 23:12:31,687: log_options() 'slideshow_zoom = 0.2'
INFO: 2024-11-30 23:12:31,687: log_options() 'smart_enabled = False'
INFO: 2024-11-30 23:12:31,687: log_options() 'smart_notice_shown = False'
INFO: 2024-11-30 23:12:31,687: log_options() 'smart_register_shown = False'
INFO: 2024-11-30 23:12:31,687: log_options() 'sources = [[True, 'favorites', 'The Favorites folder'], [True, 'fetched', 'The Fetched folder'], [True, 'folder', '/usr/share/backgrounds'], [False, 'flickr', 'user:www.flickr.com/photos/peter-levi/;user_id:93647178@N00;'], [False, 'apod', "NASA's Astronomy Picture of the Day"], [True, 'bing', 'Bing Photo of the Day'], [False, 'earthview', 'Google Earth View Wallpapers'], [True, 'natgeo', "National Geographic's photo of the day"], [False, 'unsplash', 'High-resolution photos from Unsplash.com']]'
INFO: 2024-11-30 23:12:31,687: log_options() 'stats_enabled = True'
INFO: 2024-11-30 23:12:31,687: log_options() 'stats_notice_shown = False'
INFO: 2024-11-30 23:12:31,687: log_options() 'sync_enabled = True'
INFO: 2024-11-30 23:12:31,687: log_options() 'use_landscape_enabled = True'
INFO: 2024-11-30 23:12:31,687: log_options() 'wallhaven_api_key = '
INFO: 2024-11-30 23:12:31,687: log_options() 'wallpaper_auto_rotate = False'
INFO: 2024-11-30 23:12:31,687: log_options() 'wallpaper_display_mode = os'
INFO: 2024-11-30 23:12:31,687: reload_config() 'No need to clear prepared queue'
INFO: 2024-11-30 23:12:31,687: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:12:31,687: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:12:31,688: prepare_thread() 'Prepared buffer contains 20 images'
INFO: 2024-11-30 23:12:31,788: do_set_wp() 'Calling do_set_wp with /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg, time: 1733004751.7881446'
INFO: 2024-11-30 23:12:31,792: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:12:31,793: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:12:33,688: trigger_download() 'Triggering download thread to check if download needed and possible'
INFO: 2024-11-30 23:12:39,561: server_options_thread() 'Fetching server options from http://tiny.cc/variety-options-063'
ERROR: 2024-11-30 23:12:40,185: server_options_thread() 'Could not fetch Variety serverside options'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1084, in server_options_thread
    self.server_options = Util.fetch_json(VarietyWindow.SERVERSIDE_OPTIONS_URL)
                          ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
INFO: 2024-11-30 23:12:51,450: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:12:51,452: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:12:57,533: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:12:57,533: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:13:10,186: server_options_thread() 'Fetching server options from http://tiny.cc/variety-options-063'
ERROR: 2024-11-30 23:13:15,506: server_options_thread() 'Could not fetch Variety serverside options'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1084, in server_options_thread
    self.server_options = Util.fetch_json(VarietyWindow.SERVERSIDE_OPTIONS_URL)
                          ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
INFO: 2024-11-30 23:13:45,507: server_options_thread() 'Fetching server options from http://tiny.cc/variety-options-063'
ERROR: 2024-11-30 23:13:46,122: server_options_thread() 'Could not fetch Variety serverside options'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1084, in server_options_thread
    self.server_options = Util.fetch_json(VarietyWindow.SERVERSIDE_OPTIONS_URL)
                          ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
INFO: 2024-11-30 23:14:16,124: server_options_thread() 'Fetching server options from http://tiny.cc/variety-options-063'
ERROR: 2024-11-30 23:14:16,718: server_options_thread() 'Could not fetch Variety serverside options'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1084, in server_options_thread
    self.server_options = Util.fetch_json(VarietyWindow.SERVERSIDE_OPTIONS_URL)
                          ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
INFO: 2024-11-30 23:14:17,019: reload() 'Reloading preferences dialog'
INFO: 2024-11-30 23:14:22,819: trigger_download() 'Triggering download thread to check if download needed and possible'
INFO: 2024-11-30 23:14:22,819: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:14:22,819: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:14:22,819: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:14:22,819: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:14:22,819: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:14:22,819: download_one() 'Bing: Queue size: 7'
INFO: 2024-11-30 23:14:22,819: download_one() 'Bing: Queue populated with 7 URLs'
INFO: 2024-11-30 23:14:22,819: save_locally() 'Origin URL: https://www.bing.com/search?q=Thanksgiving&form=hpcapt&filters=HpDate%3a%2220241128_0800%22'
INFO: 2024-11-30 23:14:22,819: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.TomTurkeys_EN-US6212893518_UHD.jpg'
INFO: 2024-11-30 23:14:22,819: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TomTurkeys_EN-US6212893518_UHD.jpg'
INFO: 2024-11-30 23:14:22,819: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:14:22,919: apply() 'Applying preferences'
INFO: 2024-11-30 23:14:22,922: set_visible() 'Showing indicator icon'
INFO: 2024-11-30 23:14:22,922: set_from_theme_icon() 'Showing indicator icon variety-indicator from GTK theme'
INFO: 2024-11-30 23:14:22,922: log_options() 'Loaded options:'
INFO: 2024-11-30 23:14:22,922: log_options() 'change_enabled = True'
INFO: 2024-11-30 23:14:22,922: log_options() 'change_interval = 900'
INFO: 2024-11-30 23:14:22,923: log_options() 'change_on_start = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'clipboard_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'clipboard_hosts = ['wallhaven.cc', 'wallpapers.net', 'flickr.com', 'imgur.com', 'deviantart.com', 'interfacelift.com', 'vladstudio.com', 'imageshack.us', 'deviantart.net', 'imageshack.com']'
INFO: 2024-11-30 23:14:22,923: log_options() 'clipboard_use_whitelist = True'
INFO: 2024-11-30 23:14:22,923: log_options() 'clock_date_font = Serif 30'
INFO: 2024-11-30 23:14:22,923: log_options() 'clock_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'clock_filter = -density 100 -font `fc-match -f '%{file[0]}' '%CLOCK_FONT_NAME'` -pointsize %CLOCK_FONT_SIZE -gravity SouthEast -fill '#00000044' -annotate 0x0+[%HOFFSET+58]+[%VOFFSET+108] '%H:%M' -fill white -annotate 0x0+[%HOFFSET+60]+[%VOFFSET+110] '%H:%M' -font `fc-match -f '%{file[0]}' '%DATE_FONT_NAME'` -pointsize %DATE_FONT_SIZE -fill '#00000044' -annotate 0x0+[%HOFFSET+58]+[%VOFFSET+58] '%A, %B %d' -fill white -annotate 0x0+[%HOFFSET+60]+[%VOFFSET+60] '%A, %B %d''
INFO: 2024-11-30 23:14:22,923: log_options() 'clock_font = Serif 70'
INFO: 2024-11-30 23:14:22,923: log_options() 'configfile = /home/bergefe/.config/variety/variety.conf'
INFO: 2024-11-30 23:14:22,923: log_options() 'copyto_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'copyto_folder = Default'
INFO: 2024-11-30 23:14:22,923: log_options() 'desired_color = [160, 160, 160]'
INFO: 2024-11-30 23:14:22,923: log_options() 'desired_color_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'download_folder = /home/bergefe/.config/variety/Downloaded'
INFO: 2024-11-30 23:14:22,923: log_options() 'download_preference_ratio = 0.9'
INFO: 2024-11-30 23:14:22,923: log_options() 'favorites_folder = /home/bergefe/.config/variety/Favorites'
INFO: 2024-11-30 23:14:22,923: log_options() 'favorites_operations = [['Downloaded', 'Copy'], ['Fetched', 'Move'], ['Others', 'Copy']]'
INFO: 2024-11-30 23:14:22,923: log_options() 'fetched_folder = /home/bergefe/.config/variety/Fetched'
INFO: 2024-11-30 23:14:22,923: log_options() 'filters = [[False, 'Keep original', ''], [False, 'Grayscale', '-type Grayscale'], [False, 'Heavy blur', '-scale 20% -blur 0x10 -resize 500%'], [False, 'Soft blur', '-scale 20% -blur 0x2 -resize 500%'], [False, 'Oil painting', '-paint 8'], [False, 'Pointilism', '-spread 10 -noise 3'], [False, 'Pixellate', '-scale 3% -scale 3333%']]'
INFO: 2024-11-30 23:14:22,923: log_options() 'get_wallpaper_script = /home/bergefe/.config/variety/scripts/get_wallpaper'
INFO: 2024-11-30 23:14:22,923: log_options() 'icon = Light'
INFO: 2024-11-30 23:14:22,923: log_options() 'internet_enabled = True'
INFO: 2024-11-30 23:14:22,923: log_options() 'lightness_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'lightness_mode = 0'
INFO: 2024-11-30 23:14:22,923: log_options() 'min_rating = 4'
INFO: 2024-11-30 23:14:22,923: log_options() 'min_rating_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'min_size = 80'
INFO: 2024-11-30 23:14:22,923: log_options() 'min_size_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'quota_enabled = True'
INFO: 2024-11-30 23:14:22,923: log_options() 'quota_size = 1000'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_authors = '
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_bg_color = [80, 80, 80]'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_bg_opacity = 55'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_change_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_change_interval = 300'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_disabled_sources = ['Urban Dictionary']'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_enabled = False'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_favorites_file = /home/bergefe/.config/variety/favorite_quotes.txt'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_font = Serif 30'
INFO: 2024-11-30 23:14:22,923: log_options() 'quotes_hpos = 100'
INFO: 2024-11-30 23:14:22,924: log_options() 'quotes_max_length = 250'
INFO: 2024-11-30 23:14:22,924: log_options() 'quotes_tags = '
INFO: 2024-11-30 23:14:22,924: log_options() 'quotes_text_color = [255, 255, 255]'
INFO: 2024-11-30 23:14:22,924: log_options() 'quotes_text_shadow = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'quotes_vpos = 40'
INFO: 2024-11-30 23:14:22,924: log_options() 'quotes_width = 70'
INFO: 2024-11-30 23:14:22,924: log_options() 'safe_mode = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'set_wallpaper_script = /home/bergefe/.config/variety/scripts/set_wallpaper'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_custom_enabled = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_custom_folder = /home/bergefe/Pictures'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_downloads_enabled = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_fade = 0.4'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_favorites_enabled = True'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_mode = Fullscreen'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_monitor = All'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_pan = 0.05'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_seconds = 6.0'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_sort_order = Random'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_sources_enabled = True'
INFO: 2024-11-30 23:14:22,924: log_options() 'slideshow_zoom = 0.2'
INFO: 2024-11-30 23:14:22,924: log_options() 'smart_enabled = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'smart_notice_shown = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'smart_register_shown = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'sources = [[True, 'favorites', 'The Favorites folder'], [True, 'fetched', 'The Fetched folder'], [True, 'folder', '/usr/share/backgrounds'], [False, 'flickr', 'user:www.flickr.com/photos/peter-levi/;user_id:93647178@N00;'], [False, 'apod', "NASA's Astronomy Picture of the Day"], [True, 'bing', 'Bing Photo of the Day'], [False, 'earthview', 'Google Earth View Wallpapers'], [True, 'natgeo', "National Geographic's photo of the day"], [False, 'unsplash', 'High-resolution photos from Unsplash.com']]'
INFO: 2024-11-30 23:14:22,924: log_options() 'stats_enabled = True'
INFO: 2024-11-30 23:14:22,924: log_options() 'stats_notice_shown = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'sync_enabled = True'
INFO: 2024-11-30 23:14:22,924: log_options() 'use_landscape_enabled = True'
INFO: 2024-11-30 23:14:22,924: log_options() 'wallhaven_api_key = '
INFO: 2024-11-30 23:14:22,924: log_options() 'wallpaper_auto_rotate = False'
INFO: 2024-11-30 23:14:22,924: log_options() 'wallpaper_display_mode = os'
INFO: 2024-11-30 23:14:22,924: reload_config() 'No need to clear prepared queue'
INFO: 2024-11-30 23:14:22,924: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:14:22,925: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:14:22,925: prepare_thread() 'Prepared buffer contains 20 images'
INFO: 2024-11-30 23:14:23,025: do_set_wp() 'Calling do_set_wp with /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg, time: 1733004863.0257258'
INFO: 2024-11-30 23:14:23,030: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:14:23,032: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:14:23,820: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:14:23,820: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:14:23,820: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:14:23,820: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:14:23,820: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:14:23,820: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:14:23,820: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:14:23,820: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:14:23,820: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:14:24,029: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
INFO: 2024-11-30 23:14:24,925: trigger_download() 'Triggering download thread to check if download needed and possible'
INFO: 2024-11-30 23:14:46,720: server_options_thread() 'Fetching server options from http://tiny.cc/variety-options-063'
ERROR: 2024-11-30 23:14:47,362: server_options_thread() 'Could not fetch Variety serverside options'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1084, in server_options_thread
    self.server_options = Util.fetch_json(VarietyWindow.SERVERSIDE_OPTIONS_URL)
                          ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
INFO: 2024-11-30 23:17:25,031: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:17:25,031: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:17:25,031: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:17:25,031: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:17:25,031: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:17:25,032: download_one() 'Bing: Queue size: 6'
INFO: 2024-11-30 23:17:25,032: download_one() 'Bing: Queue populated with 6 URLs'
INFO: 2024-11-30 23:17:25,032: save_locally() 'Origin URL: https://www.bing.com/search?q=Sonoma+Coast+State+Park&form=hpcapt&filters=HpDate%3a%2220241124_0800%22'
INFO: 2024-11-30 23:17:25,032: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.SonomaCoast_EN-US5218026576_UHD.jpg'
INFO: 2024-11-30 23:17:25,032: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.SonomaCoast_EN-US5218026576_UHD.jpg'
INFO: 2024-11-30 23:17:25,032: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:17:26,032: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:17:26,032: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:17:26,032: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:17:26,032: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:17:26,032: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:17:26,032: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:17:26,032: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:17:26,032: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:17:26,032: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:17:26,422: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
INFO: 2024-11-30 23:20:27,424: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:20:27,424: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:20:27,424: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:20:27,424: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:20:27,424: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:20:27,424: download_one() 'Bing: Queue size: 5'
INFO: 2024-11-30 23:20:27,424: download_one() 'Bing: Queue populated with 5 URLs'
INFO: 2024-11-30 23:20:27,424: save_locally() 'Origin URL: https://www.bing.com/search?q=Bouillon+Belgium&form=hpcapt&filters=HpDate%3a%2220241127_0800%22'
INFO: 2024-11-30 23:20:27,424: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.SemoisRiver_EN-US6047540380_UHD.jpg'
INFO: 2024-11-30 23:20:27,424: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.SemoisRiver_EN-US6047540380_UHD.jpg'
INFO: 2024-11-30 23:20:27,424: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:20:28,425: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:20:28,425: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:20:28,425: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:20:28,425: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:20:28,425: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:20:28,425: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:20:28,425: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:20:28,425: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:20:28,425: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:20:28,639: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
INFO: 2024-11-30 23:23:29,641: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:23:29,641: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:23:29,641: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:23:29,641: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:23:29,641: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:23:29,641: download_one() 'Bing: Queue size: 4'
INFO: 2024-11-30 23:23:29,641: download_one() 'Bing: Queue populated with 4 URLs'
INFO: 2024-11-30 23:23:29,641: save_locally() 'Origin URL: https://www.bing.com/search?q=UNESCO+World+Olive+Tree+Day&form=hpcapt&filters=HpDate%3a%2220241126_0800%22'
INFO: 2024-11-30 23:23:29,641: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:23:29,641: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.TrulliGrove_EN-US5919292259_UHD.jpg'
INFO: 2024-11-30 23:23:29,641: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:23:30,641: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:23:30,642: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:23:30,642: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:23:30,642: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:23:30,642: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:23:30,642: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:23:30,642: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:23:30,642: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:23:30,642: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:23:30,877: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
INFO: 2024-11-30 23:26:31,879: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:26:31,879: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:26:31,879: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:26:31,879: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:26:31,879: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:26:31,879: download_one() 'Bing: Queue size: 3'
INFO: 2024-11-30 23:26:31,879: download_one() 'Bing: Queue populated with 3 URLs'
INFO: 2024-11-30 23:26:31,879: save_locally() 'Origin URL: https://www.bing.com/search?q=Fibonacci+Day&form=hpcapt&filters=HpDate%3a%2220241123_0800%22'
INFO: 2024-11-30 23:26:31,879: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.FibonacciAloe_EN-US5137471725_UHD.jpg'
INFO: 2024-11-30 23:26:31,879: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.FibonacciAloe_EN-US5137471725_UHD.jpg'
INFO: 2024-11-30 23:26:31,879: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:26:32,880: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:26:32,880: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:26:32,880: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:26:32,880: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:26:32,880: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:26:32,880: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:26:32,880: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:26:32,880: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:26:32,880: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:26:33,115: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
INFO: 2024-11-30 23:27:19,560: regular_change_thread() 'regular_change changes wallpaper'
INFO: 2024-11-30 23:27:19,560: set_wallpaper() 'Calling set_wallpaper with /home/bergefe/.config/variety/Downloaded/Bing/OHR.KilchurnAutumn_EN-US6737063910_UHD.jpg'
INFO: 2024-11-30 23:27:19,560: prepare_thread() 'Prepared buffer contains 19 images'
INFO: 2024-11-30 23:27:19,560: do_set_wp() 'Calling do_set_wp with /home/bergefe/.config/variety/Downloaded/Bing/OHR.KilchurnAutumn_EN-US6737063910_UHD.jpg, time: 1733005639.5607193'
INFO: 2024-11-30 23:27:19,565: update_indicator() 'Setting file info to: /home/bergefe/.config/variety/Downloaded/Bing/OHR.KilchurnAutumn_EN-US6737063910_UHD.jpg'
INFO: 2024-11-30 23:27:19,566: list_files() 'More than 1 files in the folders, stop listing'
INFO: 2024-11-30 23:27:21,560: trigger_download() 'Triggering download thread to check if download needed and possible'
INFO: 2024-11-30 23:30:21,561: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:30:21,561: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:30:21,561: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:30:21,561: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:30:21,561: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:30:21,561: download_one() 'Bing: Queue size: 2'
INFO: 2024-11-30 23:30:21,561: download_one() 'Bing: Queue populated with 2 URLs'
INFO: 2024-11-30 23:30:21,561: save_locally() 'Origin URL: https://www.bing.com/search?q=Mont+Saint+Michel+France&form=hpcapt&filters=HpDate%3a%2220241129_0800%22'
INFO: 2024-11-30 23:30:21,561: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.MtStMichel_EN-US6641012356_UHD.jpg'
INFO: 2024-11-30 23:30:21,561: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.MtStMichel_EN-US6641012356_UHD.jpg'
INFO: 2024-11-30 23:30:21,561: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:30:22,561: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:30:22,562: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:30:22,562: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:30:22,562: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:30:22,562: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:30:22,562: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:30:22,562: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:30:22,562: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:30:22,562: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:30:22,756: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
INFO: 2024-11-30 23:33:23,757: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:33:23,757: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:33:23,757: get_throttling() 'Bing: parsing serverside options'
INFO: 2024-11-30 23:33:23,757: get_throttling() 'Could not parse Bing serverside options, using defaults None, None'
INFO: 2024-11-30 23:33:23,757: download_one() 'Bing: Downloading an image, config: None'
INFO: 2024-11-30 23:33:23,758: download_one() 'Bing: Queue size: 1'
INFO: 2024-11-30 23:33:23,758: download_one() 'Bing: Queue populated with 1 URLs'
INFO: 2024-11-30 23:33:23,758: save_locally() 'Origin URL: https://www.bing.com/search?q=Amboseli+National+Park+Kenya&form=hpcapt&filters=HpDate%3a%2220241125_0800%22'
INFO: 2024-11-30 23:33:23,758: save_locally() 'Image URL: https://www.bing.com/th?id=OHR.AmboseliGiraffes_EN-US9072366924_UHD.jpg'
INFO: 2024-11-30 23:33:23,758: save_locally() 'Local path: /home/bergefe/.config/variety/Downloaded/Bing/OHR.AmboseliGiraffes_EN-US9072366924_UHD.jpg'
INFO: 2024-11-30 23:33:23,758: save_locally() 'File already exists, skip downloading'
INFO: 2024-11-30 23:33:24,758: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:33:24,758: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:33:24,758: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:33:24,758: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:33:24,758: download_one() 'National Geographic: Downloading an image, config: None'
INFO: 2024-11-30 23:33:24,758: download_one() 'National Geographic: Queue size: 0'
INFO: 2024-11-30 23:33:24,758: get_throttling() 'National Geographic: parsing serverside options'
INFO: 2024-11-30 23:33:24,758: get_throttling() 'Could not parse National Geographic serverside options, using defaults None, None'
INFO: 2024-11-30 23:33:24,758: download_one() 'National Geographic: Filling queue'
ERROR: 2024-11-30 23:33:24,964: download_one_from() 'Could not download wallpaper:'
Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
           ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 344, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.13/json/decoder.py", line 362, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 2 column 9 (char 9)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.13/site-packages/variety/VarietyWindow.py", line 1164, in download_one_from
    file = downloader.download_one()
  File "/usr/lib/python3.13/site-packages/variety/plugins/downloaders/DefaultDownloader.py", line 141, in download_one
    items = self.fill_queue()
  File "/usr/lib/python3.13/site-packages/variety/plugins/builtin/downloaders/NationalGeographicDownloader.py", line 54, in fill_queue
    queue = Util.fetch_json(DATA_URL)
  File "/usr/lib/python3.13/site-packages/variety/Util.py", line 684, in fetch_json
    return Util.request(url, data, **request_kwargs).json()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/lib/python3.13/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 2 column 9 (char 9)
